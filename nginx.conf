# worker_processes auto;

# events {
#     worker_connections 1024;
# }

# http {
#     upstream docker_containers {
#         # Docker containers' IPs and ports
#         server 192.168.3.201:4040;
#         server 192.168.3.201:5005;
#         # Add more servers for additional Docker containers
#     }

#     server {
#         listen 80;
#         server_name example.com; # Change this to your domain

#         location / {
#             proxy_pass http://docker_containers;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }


# # server {
# #     listen 80;
# #     server_name localhost fine-eternal-falcon.ngrok-free.app/ 192.168.3.201;

# #     location / {
# #         proxy_pass http://backend_http;
# #         proxy_set_header Host $host;
# #         proxy_set_header X-Real-IP $remote_addr;
# #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #         proxy_set_header X-Forwarded-Proto http;
# #     }

# #     location ~ \.php$ {
# #         include fastcgi_params;
# #         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
# #         fastcgi_pass unix:/var/run/php/php-fpm.sock;
# #     }

# #     location /css {
# #         root /path/to/your/css/files;
# #     }

# #     # Add more location blocks as needed for other static file types or directories
# # }

# # server {
# #     listen 443 ssl;
# #     server_name localhost fine-eternal-falcon.ngrok-free.app/ 192.168.3.201;

# #     ssl_certificate /path/to/your/certificate.crt;
# #     ssl_certificate_key /path/to/your/private.key;

# #     location / {
# #         proxy_pass https://backend_https;
# #         proxy_set_header Host $host;
# #         proxy_set_header X-Real-IP $remote_addr;
# #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #         proxy_set_header X-Forwarded-Proto https;
# #     }

# #     location ~ \.php$ {
# #         include fastcgi_params;
# #         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
# #         fastcgi_pass unix:/var/run/php/php-fpm.sock;
# #     }

# #     location /css {
# #         root /path/to/your/css/files;
# #     }

#     # Add more location blocks as needed for other static file types or directories
# # }

events {}

http {
    log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /etc/nginx/access.log upstream_time;
    server {
        listen 80;
        listen 433 ssl;
        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/key.pem;
        ssl_password_file /etc/nginx/ssl_passwords.txt;
        server_name localhost fine-eternal-falcon.ngrok-free.app 192.168.3.201 ;
        
        rewrite /web(.*) /plex/web/$1;

        rewrite /container(.*) /docker/container/$1;

        rewrite /inspect(.*) /ngrok/inspect/http;

        rewrite /app(.*) /vnc/app/$1;
        rewrite /core(.*) /vnc/core/$1;

        rewrite /update_inventory(.*) /scanner/update_inventory;
        rewrite /api_proxy(.*) /scanner/api_proxy;
        rewrite /search_inventory(.*) /scanner/search_inventory;

        location /plex {
            # rewrite ^/plex/(.*)$ /$1 break;
            proxy_pass https://192.168.3.201:32400/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            auth_basic "Restricted Content";
            auth_basic_user_file /etc/nginx/.htpasswd;

            location /plex/(.*) {
                proxy_pass https://192.168.3.201:32400/$request_uri;
                # Additional proxy settings if needed
            }
        }
        
        location /ngrok {
            # rewrite ^/ngrok/(.*)$ /$1 break;
            proxy_pass http://192.168.3.201:4040;
            proxy_set_header Host $host:4040;
            proxy_set_header X-Forwarded-For $remote_addr;
            auth_basic "Restricted Content";
            auth_basic_user_file /etc/nginx/.htpasswd;
                        
            location /ngrok/(.*) {
                proxy_pass http://192.168.3.201:4040/$request_uri;
                # Additional proxy settings if needed
            }
        }

        location /scanner {
            proxy_pass https://192.168.3.201:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            auth_basic "Restricted Content";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_ssl_session_reuse off;
            proxy_redirect off;

            location /scanner/(.*) {
                proxy_pass https://192.168.3.201:5000/$request_uri;
                # Additional proxy settings if needed
            }
        }
        location /docker {
            # rewrite ^/docker/(.*)$ /$1 break;
            proxy_pass http://192.168.3.201:5005/;
            proxy_set_header Host $host:5005;
            proxy_set_header X-Forwarded-For $remote_addr;
            auth_basic "Restricted Content";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_ssl_session_reuse off;
            proxy_redirect off;
            location /docker/(.*){
                proxy_pass http://192.168.3.201:5005/$request_uri;
            }

        }
        location /vnc{
            proxy_pass http://192.168.3.201:8888/;
            proxy_set_header Host $host:8888;
            proxy_set_header X-Forwarded-For $remote_addr;
            auth_basic "Restricted Content";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_ssl_session_reuse off;
            proxy_redirect off;
            location /vnc/(.*){
                proxy_pass http://192.168.3.201:8888/$request_uri;
            }
        }
    }
}
