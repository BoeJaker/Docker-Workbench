# Define routers to route incoming requests to appropriate services based on multiple hosts
http:
  routers:
    router-1:
      rule: "Host(`192.168.3.201`) && PathPrefix(`/dashboard`)"   # Match requests with host example1.com or www.example1.com
      service: dashboard                                # Route to service-1
      entryPoints:
        - web   
      middlewares: 
       - "dashboard-stripprefix"                                          # Use the web entry point (HTTP)

    router-2:
      rule:  "Host(`192.168.3.201`) && PathPrefix(`/dev-environment`)"    # Match requests with host example2.com or www.example2.com
      service: dev-environment                                 # Route to service-2
      entryPoints:
        - web          
      middlewares: 
        - "dev-environment-stripprefix"                                # Use the web entry point (HTTP)

  middlewares:
    dashboard-stripprefix:
      stripPrefix:
        prefixes:
          - "/dashboard"

    dev-environment-stripprefix:
      stripPrefix:
        prefixes:
          - "/dev-environment"

  # Define services to handle incoming requests
  services:
    dashboard:
      loadBalancer:
        servers:
          - url: "http://192.168.3.201:81"                # Forward traffic to backend-service-1

    dev-environment:
      loadBalancer:
        servers:
          - url: "http://192.168.3.201:8011"                # Forward traffic to backend-service-2

